{
  "漫画柜": {
    "chapterContent": {
      "validConfig": "",
      "httpHeaders": {
        "Referer": "https://www.manhuagui.com/",
        "User-Agent": "Mozilla/5.0 (Linux; Android 10; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 Mobile Safari/537.36 SearchCraft/3.6.5 (Baidu; P1 9.0)"
      },
      "JSParser": "function functionName(config, params, result) {\n    let regex = /\\(\\'([^\\']+)\\',([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/gim;\n    while (tem = regex.exec(result)) {\n        let content = [];\n        let nextre = /'([A-Za-z0-9+/=]+)'\\[/gim;\n        tem_k = nextre.exec(tem[4]);\n        let k = splic(tem_k[1], tem_k[1].length, 32).split(\"|\");\n        data = decode(tem[1], tem[2], tem[3], k);\n        let imgrex = /\\((\\{[\\s\\S]*?)\\)./gim;\n        let img_tem = imgrex.exec(data);\n        let img_json = JSON.parse(img_tem[1]);\n        let img_count = img_json.count;\n        let imglist = img_json.images;\n        let sl_e = img_json.sl.e;\n        let sl_m = img_json.sl.m;\n        for (i = 0; i < img_count; i++) {\n            content[i] =\n                \"https://eu1.hamreus.com\" +\n                imglist[i] +\n                \"?e=\" +\n                sl_e +\n                \"&m=\" +\n                sl_m;\n        }\n\n        return JSON.stringify({\n            \"url\": content.join(\"\\n\"),\n            \"httpHeaders\": config.httpHeaders\n        });\n\n    }\n}\n\nfunction getBaseValue(alphabet, character) {\n  var baseReverseDic = {};\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i = 0; i < alphabet.length; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nfunction decompressFromBase64(input, index) {\n  if (input == null) return \"\";\n  if (input == \"\") return null;\n  var keyStrBase64 =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let value = getBaseValue(keyStrBase64, input.charAt(index));\n  return value;\n}\n\nfunction splic(input, length, resetValue) {\n  var f = String.fromCharCode;\n  var dictionary = [],\n    next,\n    enlargeIn = 4,\n    dictSize = 4,\n    numBits = 3,\n    entry = \"\",\n    result = [],\n    i,\n    w,\n    bits,\n    resb,\n    maxpower,\n    power,\n    c,\n    data = {\n      val: decompressFromBase64(input, 0),\n      position: resetValue,\n      index: 1,\n    };\n  for (i = 0; i < 3; i += 1) {\n    dictionary[i] = i;\n  }\n  bits = 0;\n  maxpower = Math.pow(2, 2);\n  power = 1;\n  while (power != maxpower) {\n    resb = data.val & data.position;\n    data.position >>= 1;\n    if (data.position == 0) {\n      data.position = resetValue;\n      data.val = decompressFromBase64(input, data.index++);\n    }\n    bits |= (resb > 0 ? 1 : 0) * power;\n    power <<= 1;\n  }\n  switch ((next = bits)) {\n    case 0:\n      bits = 0;\n      maxpower = Math.pow(2, 8);\n      power = 1;\n      while (power != maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = decompressFromBase64(input, data.index++);\n        }\n        bits |= (resb > 0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n      c = f(bits);\n      break;\n    case 1:\n      bits = 0;\n      maxpower = Math.pow(2, 16);\n      power = 1;\n      while (power != maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = decompressFromBase64(input, data.index++);\n        }\n        bits |= (resb > 0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n      c = f(bits);\n      break;\n    case 2:\n      return \"\";\n  }\n  dictionary[3] = c;\n  w = c;\n  result.push(c);\n  while (true) {\n    if (data.index > length) {\n      return \"\";\n    }\n    bits = 0;\n    maxpower = Math.pow(2, numBits);\n    power = 1;\n    while (power != maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = decompressFromBase64(input, data.index++);\n      }\n      bits |= (resb > 0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n    switch ((c = bits)) {\n      case 0:\n        bits = 0;\n        maxpower = Math.pow(2, 8);\n        power = 1;\n        while (power != maxpower) {\n          resb = data.val & data.position;\n          data.position >>= 1;\n          if (data.position == 0) {\n            data.position = resetValue;\n            data.val = decompressFromBase64(input, data.index++);\n          }\n          bits |= (resb > 0 ? 1 : 0) * power;\n          power <<= 1;\n        }\n        dictionary[dictSize++] = f(bits);\n        c = dictSize - 1;\n        enlargeIn--;\n        break;\n      case 1:\n        bits = 0;\n        maxpower = Math.pow(2, 16);\n        power = 1;\n        while (power != maxpower) {\n          resb = data.val & data.position;\n          data.position >>= 1;\n          if (data.position == 0) {\n            data.position = resetValue;\n            data.val = decompressFromBase64(input, data.index++);\n          }\n          bits |= (resb > 0 ? 1 : 0) * power;\n          power <<= 1;\n        }\n        dictionary[dictSize++] = f(bits);\n        c = dictSize - 1;\n        enlargeIn--;\n        break;\n      case 2:\n        return result.join(\"\");\n    }\n    if (enlargeIn == 0) {\n      enlargeIn = Math.pow(2, numBits);\n      numBits++;\n    }\n    if (dictionary[c]) {\n      entry = dictionary[c];\n    } else {\n      if (c === dictSize) {\n        entry = w + w.charAt(0);\n      } else {\n        return null;\n      }\n    }\n    result.push(entry);\n    dictionary[dictSize++] = w + entry.charAt(0);\n    enlargeIn--;\n    w = entry;\n    if (enlargeIn == 0) {\n      enlargeIn = Math.pow(2, numBits);\n      numBits++;\n    }\n  }\n}\n\nfunction decode(p, a, c, k) {\n  let d = {};\n  let e = function (c) {\n    return (\n      (c < a ? \"\" : e(parseInt(c / a))) +\n      ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))\n    );\n  };\n  if (!\"\".replace(/^/, String)) {\n    while (c--) d[e(c)] = k[c] || e(c);\n    k = [\n      function (e) {\n        return d[e];\n      },\n    ];\n    e = function () {\n      return \"\\\\w+\";\n    };\n    c = 1;\n  }\n  while (c--)\n    if (k[c]) p = p.replace(new RegExp(\"\\\\b\" + e(c) + \"\\\\b\", \"g\"), k[c]);\n  return p;\n}",
      "host": "https://www.manhuagui.com",
      "parserID": "DOM",
      "actionID": "chapterContent"
    },
    "enable": 1,
    "shupingList": {
      "actionID": "shupingList",
      "parserID": "DOM"
    },
    "bookDetail": {
      "actionID": "bookDetail",
      "parserID": "DOM"
    },
    "shudanList": {},
    "bookWorld": {
      "分类": {
        "author": "//div[@class='rank-author']/a/text()",
        "responseFormatType": "DOM",
        "bookName": "//td[@class='rank-title']/h5/a/text()",
        "desc": "",
        "requestInfo": "",
        "host": "https://www.manhuagui.com",
        "actionID": "bookWorld",
        "detailUrl": "//td[@class='rank-title']/h5/a/@href",
        "moreKeys": {
            "requestFilters":"type\n日排行::/rank/\n周排行::/rank/week.html\n月排行::/rank/month.html\n总排行::/rank/total.html\n日本::/rank/japan.html\n港台::/rank/hongkong.html\n其它::/rank/other.html\n欧美::/rank/europe.html\n内地::/rank/china.html\n韩国::/rank/korea.html\n少女::/rank/shaonv.html\n少年::/rank/shaonian.html\n青年::/rank/qingnian.html\n儿童::/rank/ertong.html\n通用::/rank/tongyong.html\n热血::/rank/rexue.html\n冒险::/rank/maoxian.html\n魔幻::/rank/mohuan.html\n神鬼::/rank/shengui.html\n搞笑::/rank/gaoxiao.html\n萌系::/rank/mengxi.html\n爱情::/rank/aiqing.html\n科幻::/rank/kehuan.html\n魔法::/rank/mofa.html\n格斗::/rank/gedou.html\n武侠::/rank/wuxia.html\n机战::/rank/jizhan.html\n战争::/rank/zhanzheng.html\n竞技::/rank/jingji.html\n体育::/rank/tiyu.html\n校园::/rank/xiaoyuan.html\n生活::/rank/shenghuo.html\n励志::/rank/lizhi.html\n历史::/rank/lishi.html\n伪娘::/rank/weiniang.html\n宅男::/rank/zhainan.html\n腐女::/rank/funv.html\n耽美::/rank/danmei.html\n百合::/rank/baihe.html\n后宫::/rank/hougong.html\n治愈::/rank/zhiyu.html\n美食::/rank/meishi.html\n推理::/rank/tuili.html\n悬疑::/rank/xuanyi.html\n恐怖::/rank/kongbu.html\n四格::/rank/sige.html\n职场::/rank/zhichang.html\n侦探::/rank/zhentan.html\n社会::/rank/shehui.html\n音乐::/rank/yinyue.html\n舞蹈::/rank/wudao.html\n杂志::/rank/zazhi.html\n黑道::/rank/heidao.html"
        },
        "cover": "",
        "parserID": "DOM",
        "validConfig": "//table[@class='rank-detail']//tbody//tr",
        "list": "//table[@class='rank-detail']//tbody//tr",
        "httpHeaders": {
          "Referer": "https://www.manhuagui.com/",
          "User-Agent": "Mozilla/5.0 (Linux; Android 10; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 Mobile Safari/537.36 SearchCraft/3.6.5 (Baidu; P1 9.0)"
        },
        "status": "//td[@class='rank-title']/span/text()"
      }
    },
    "sourceUrl": "https://www.manhuagui.com",
    "relatedWord": {
      "actionID": "relatedWord",
      "parserID": "DOM"
    },
    "weight": "9999",
    "sourceName": "漫画柜",
    "sourceType": "comic",
    "miniAppVersion": "2.53.2",
    "shudanDetail": {
      "actionID": "shudanDetail",
      "parserID": "DOM"
    },
    "httpHeaders": {
      "Referer": "https://www.manhuagui.com/",
      "User-Agent": "Mozilla/5.0 (Linux; Android 10; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 Mobile Safari/537.36 SearchCraft/3.6.5 (Baidu; P1 9.0)"
    },
    "lastModifyTime": "1716953051.752684",
    "shupingHome": {
      "actionID": "shupingHome",
      "parserID": "DOM"
    },
    "searchShudan": {
      "actionID": "searchShudan",
      "parserID": "DOM"
    },
    "searchBook": {
      "author": "//div[@class='book-detail']/dl/dd[3]/span/a/text()",
      "responseFormatType": "html",
      "bookName": "//div[@class='book-detail']/dl/dt/a/text()",
      "httpHeaders": {
        "Referer": "https://www.manhuagui.com/",
        "User-Agent": "Mozilla/5.0 (Linux; Android 10; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 Mobile Safari/537.36 SearchCraft/3.6.5 (Baidu; P1 9.0)"
      },
      "requestInfo": "https://www.manhuagui.com/s/%@keyWord_p%@pageIndex.html",
      "host": "https://www.manhuagui.com",
      "actionID": "searchBook",
      "desc": "//div[@class='book-detail']/dl/dd[@class='intro']/span/text()",
      "detailUrl": "//div[@class='book-cover']/a/@href",
      "cover": "//div[@class='book-cover']/a/img/@src",
      "list": "//div[@class='book-result']/ul/li",
      "parserID": "DOM",
      "validConfig": "",
      "moreKeys": {
        "pageSize": 5
      }
    },
    "chapterList": {
      "validConfig": "",
      "httpHeaders": {
        "Referer": "https://www.manhuagui.com/",
        "User-Agent": "Mozilla/5.0 (Linux; Android 10; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.108 Mobile Safari/537.36 SearchCraft/3.6.5 (Baidu; P1 9.0)"
      },
      "JSParser": "function functionName(config, params, result) {\n    let list = [];\n    let regex = /<li><a href=\"([^\"]+)\"><b>([^<]+)<\\/b></gim;\n\n    // let match = result.match(regex);\n    while (tem = regex.exec(result)) {\n        let chapterInfo = {};\n        chapterInfo.title = tem[2];\n        chapterInfo.url = config.host + tem[1];\n        list.push(chapterInfo);\n    }\n    \n    return { list: list.reverse() };\n}",
      "host": "https://www.manhuagui.com",
      "parserID": "DOM",
      "actionID": "chapterList"
    }
  }
}
